!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=5)}([function(e,n,t){"use strict";function r(e,n){if(document.querySelector(".homeText"))console.log("About section already exists");else{let t=document.createElement("div");t.classList.add("homeText");let r=document.createElement("p");r.textContent="Taqueria Guerrero is a great restaurant that has proudly served the community for thousands of years. We have the best food, a great atmosphere, and some really good beer!",t.appendChild(r);let o=document.createElement("p");o.textContent="Spicy jalapeno bacon ipsum dolor amet ham jerky tongue pork belly ball tip burgdoggen beef ribs strip steak tri-tip salami sausage pork cow. Pork chuck chicken ball tip rump landjaeger pancetta biltong ham ground round salami doner kielbasa kevin. Pork belly shankle boudin porchetta short loin, chuck drumstick tail pork spare ribs shank shoulder hamburger tenderloin. Bacon salami bresaola beef kevin biltong sirloin picanha tongue shoulder andouille.",t.appendChild(o);let a=document.createElement("p");a.textContent="Pastrami short ribs pork chop shankle corned beef turkey. Spare ribs andouille cow frankfurter pastrami ground round. Doner capicola cow bacon ham sausage, ball tip strip steak. Fatback kevin strip steak tenderloin brisket. Ham hock hamburger jerky beef ribs tail, picanha pancetta boudin. Andouille picanha alcatra corned beef, turducken bacon ham pork belly bresaola cow.",t.appendChild(a);let i=document.createElement("p");i.textContent="Tongue turducken leberkas shoulder sirloin. Short ribs porchetta rump pig bresaola. Bresaola landjaeger shoulder brisket strip steak, salami drumstick venison. Pork frankfurter pork chop tongue turducken, short loin pig ground round beef boudin.",t.appendChild(i);let c=document.createElement("p");if(c.textContent="T-bone porchetta ball tip beef ribs meatball. Jowl beef ribs brisket, spare ribs chicken prosciutto sausage pastrami ground round kielbasa jerky filet mignon tongue ham hock ribeye. Corned beef biltong ball tip ham filet mignon pork loin. Leberkas burgdoggen tri-tip kielbasa porchetta pork belly andouille jerky drumstick chuck frankfurter brisket. Salami turducken shoulder bresaola rump cow ham boudin capicola swine shank tongue turkey chuck sausage. Ball tip boudin short ribs, chicken filet mignon burgdoggen corned beef sirloin brisket.",t.appendChild(c),n){let n=document.querySelector(".footer");e.insertBefore(t,n)}else e.appendChild(t)}}function o(){let e=document.querySelector(".homeText");e&&e.remove()}t.r(n),t.d(n,"renderAbout",(function(){return r})),t.d(n,"removeAbout",(function(){return o}))},function(e,n,t){"use strict";function r(e,n){if(document.querySelector(".menu-body"))console.log("Menu already exists");else{let t=document.createElement("div");t.classList.add("menu-body");let r=document.createElement("h2");r.textContent="Menu",t.appendChild(r);let i=a("Individual Items");t.appendChild(i);let c=o("Chicken or beef taco","$1.50","1 flour tortilla filled with chicken or beef fajitas and salad.");i.appendChild(c);let l=o("Quesadilla","$5","1 large flour quesadilla filled with chicken or beef fajitas. Served with salad and sour cream.");i.appendChild(l);let d=o("Burrito","$5","1 large burrito with your choice of meat and filling.");i.appendChild(d);let u=o("Gordita","$3","1 chicken or beef gordita filled with refried beans and cheese.");i.appendChild(u);let s=a("Entrees");t.appendChild(s);let p=o("Enchilada Plate","$10","3 beef, cheese, or chicken enchiladas served with rice, refried beans, and salad.");s.appendChild(p);let m=o("Burrito Plate","$9","1 large burrito filled with your choice of meat and fillings. Served with rice and refried beans.");s.appendChild(m);let f=o("Mexican Taquitos Plate","$9","5 beef or chicken Mexican Taquitos filled with grilled onions and avocados. Served with charro beans.");s.appendChild(f);o("Tacos al Carbon","$10","3 flour tortillas filled with chicken or beef fajitas. Served with rice, refried beans, and salad.");if(s.appendChild(f),n){let n=document.querySelector(".footer");e.insertBefore(t,n)}else e.appendChild(t)}}function o(e,n,t){let r=document.createElement("div");r.classList.add("menu-item");let o=document.createElement("div");o.classList.add("menu-item-name"),o.textContent=e,r.appendChild(o);let a=document.createElement("div");a.classList.add("menu-item-price"),a.textContent=n,r.appendChild(a);let i=document.createElement("div");return i.classList.add("menu-item-description"),i.textContent=t,r.appendChild(i),r}function a(e){let n=document.createElement("div");n.classList.add("menu-section");let t=document.createElement("h2");return t.classList.add("menu-section-title"),t.textContent=e,n.appendChild(t),n}function i(){let e=document.querySelector(".menu-body");e&&e.remove()}t.r(n),t.d(n,"renderMenu",(function(){return r})),t.d(n,"removeMenu",(function(){return i}))},function(e,n,t){"use strict";t.r(n),t.d(n,"renderContact",(function(){return o})),t.d(n,"removeContact",(function(){return a}));var r=t.p+"def3472f782567d283743a5f934fdf2e.jpg";function o(e,n){if(document.querySelector(".contact-container"))console.log("Contact section already exists");else{let t=document.createElement("div");t.classList.add("contact-container");let o=document.createElement("div");t.appendChild(o);let a=document.createElement("h2");a.textContent="Contact Us",o.appendChild(a);let i=document.createElement("p");i.textContent="Come on down for a bite, or leave us a message:",o.appendChild(i);let c=document.createElement("div");c.classList.add("row"),t.appendChild(c);let l=document.createElement("div");l.classList.add("column"),c.appendChild(l);let d=document.createElement("img");d.src=r,d.style.width="100%",l.appendChild(d);let u=document.createElement("div");u.classList.add("column"),c.appendChild(u);let s=document.createElement("form");s.action="#",u.appendChild(s);let p=document.createElement("label");p.htmlFor="fname",p.textContent="First Name",s.appendChild(p);let m=document.createElement("input");m.type="text",m.id="fname",m.name="firstname",m.placeholder="Your name...",m.required=!0,s.appendChild(m);let f=document.createElement("label");f.htmlFor="lname",f.textContent="Last Name",s.appendChild(f);let h=document.createElement("input");h.type="text",h.id="lname",h.name="lastname",h.placeholder="Your last name...",h.required=!0,s.appendChild(h);let b=document.createElement("label");b.htmlFor="email",b.textContent="Email",s.appendChild(b);let g=document.createElement("input");g.type="email",g.id="email",g.name="email",g.placeholder="email@address.com...",g.required=!0,s.appendChild(g);let v=document.createElement("label");v.htmlFor="subject",v.textContent="Subject",s.appendChild(v);let x=document.createElement("textarea");x.id="subject",x.name="subject",x.placeholder="Write something...",x.required=!0,x.style.height="170px",s.appendChild(x);let y=document.createElement("input");if(y.type="submit",y.value="Submit",s.appendChild(y),n){let n=document.querySelector(".footer");e.insertBefore(t,n)}else e.appendChild(t)}}function a(){let e=document.querySelector(".contact-container");e&&e.remove()}},function(e,n,t){"use strict";function r(e){let n=document.createElement("div");n.classList.add("topnav");let t=document.createElement("a");t.textContent="Home",t.id="home",n.appendChild(t),t=document.createElement("a"),t.textContent="Menu",t.id="menu",n.appendChild(t),t=document.createElement("a"),t.textContent="Contact",t.id="contact",n.appendChild(t),e.append(n),window.onscroll=()=>{!function(e){let n=e.offsetTop;window.pageYOffset>=n?e.classList.add("sticky"):e.classList.remove("sticky")}(n)}}function o(e){let n=document.createElement("div");n.classList.add("hero-image");let t=document.createElement("div");t.classList.add("hero-text");let r=document.createElement("h1");r.textContent="Taqueria Guerrero",t.appendChild(r),n.appendChild(t),e.appendChild(n)}function a(){document.querySelector(".topnav").remove(),document.querySelector(".hero-image").remove()}t.r(n),t.d(n,"renderNavBar",(function(){return r})),t.d(n,"renderHeroImage",(function(){return o})),t.d(n,"removeHeader",(function(){return a}))},function(e,n,t){"use strict";t.r(n),t.d(n,"renderFooter",(function(){return o}));var r=t.p+"630fb5d3ea6d6fd8193c3a2d988a870f.png";function o(e){let n=document.createElement("footer");n.classList.add("footer");let t=document.createElement("p");t.textContent="Created by Francisco Guerrero",t.appendChild(document.createTextNode("  ")),n.appendChild(t);let o=document.createElement("a");o.href="https://github.com/franciscog123/restaurant-page";let a=document.createElement("img");a.src=r,a.style.border=0,a.style.height="50px",a.style.width="50px",a.alt="GitHub Repo",o.appendChild(a),n.appendChild(o),e.appendChild(n)}},function(e,n,t){"use strict";t.r(n);t(6);var r=t(3),o=t(0),a=t(4),i=t(2),c=t(1);let l=document.querySelector("#content");Object(r.renderNavBar)(l),Object(r.renderHeroImage)(l),o.renderAbout(l,!1),Object(a.renderFooter)(l),document.querySelector("#home").addEventListener("click",()=>{Object(i.removeContact)(),Object(c.removeMenu)(),o.renderAbout(l,!0)}),document.querySelector("#contact").addEventListener("click",()=>{o.removeAbout(),Object(c.removeMenu)(),Object(i.renderContact)(l,!0)}),document.querySelector("#menu").addEventListener("click",()=>{o.removeAbout(),Object(i.removeContact)(),Object(c.renderMenu)(l,!0)})},function(e,n,t){var r=t(7),o=t(8);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),i=[];function c(e){for(var n=-1,t=0;t<i.length;t++)if(i[t].identifier===e){n=t;break}return n}function l(e,n){for(var t={},r=[],o=0;o<e.length;o++){var a=e[o],l=n.base?a[0]+n.base:a[0],d=t[l]||0,u="".concat(l," ").concat(d);t[l]=d+1;var s=c(u),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==s?(i[s].references++,i[s].updater(p)):i.push({identifier:u,updater:b(p,n),references:1}),r.push(u)}return r}function d(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var u,s=(u=[],function(e,n){return u[e]=n,u.filter(Boolean).join("\n")});function p(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(n,o);else{var a=document.createTextNode(o),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(a,i[n]):e.appendChild(a)}}function m(e,n,t){var r=t.css,o=t.media,a=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var f=null,h=0;function b(e,n){var t,r,o;if(n.singleton){var a=h++;t=f||(f=d(n)),r=p.bind(null,t,a,!1),o=p.bind(null,t,a,!0)}else t=d(n),r=m.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=o());var t=l(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=c(t[r]);i[o].references--}for(var a=l(e,n),d=0;d<t.length;d++){var u=c(t[d]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}t=a}}}},function(e,n,t){var r=t(9),o=t(10),a=t(11),i=t(12),c=t(13);n=r(!1);var l=o(a),d=o(i),u=o(c);n.push([e.i,"@font-face{\n    font-family: 'Taco Modern';\n    src: url("+l+") format('truetype');\n}\n\nbody, html {\n    height: 100%;\n    margin:0;\n    background-image: url("+d+");\n    background-repeat: repeat-y;\n    background-size: cover;\n    width: 100%;\n    font-family: 'Raleway', sans-serif, Arial, Helvetica, sans-serif;\n}\n\nbody{\n  position: absolute;\n}\n\n#content\n{\n    height: 100%;\n    text-align: center;\n}\n\n.topnav {\n    position: fixed;\n    z-index: 1;\n    width: 100%;\n    overflow: hidden;\n    background-color: #d3ac43;\n  }\n\n  .sticky\n  {\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index:1;\n    opacity: .8;\n  }\n  \n  .sticky + #content {\n    padding-top: 60px;\n  }\n\n.topnav a {\n    float: left;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n    font-size: 17px;\n  }\n\n  .topnav a:hover {\n    background-color: #ddd;\n    color: #653e00;\n    cursor: pointer;\n  }\n\n.hero-image \n{\n    /* Use \"linear-gradient\" to add a darken background effect to the image. This will make the text easier to read */\n    background-image:linear-gradient(rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), url("+u+");\n    height: 50%;\n\n    /*position and center the image to scale nicely on all screens*/\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: relative;\n}\n\n/*place text in the middle of the image */\n.hero-text {\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: whitesmoke;\n    font-family: 'Taco Modern',Arial, Helvetica, sans-serif;\n    font-size: 35px;\n  }\n\n  .homeText{\n      display: flex;\n      flex-direction: column;\n      background-color: #f6f0e8;\n      font-family: 'Raleway', sans-serif, Arial, Helvetica, sans-serif;\n      font-size: x-large;\n      margin: 30px;\n      padding:10px;\n  }\n\n  .footer\n  {\n      display: flex;\n      flex-direction: row;\n      flex-shrink: 0;\n      background-color: #d36e44;\n      padding:5px;\n      color:white;\n      font-family: 'Raleway', sans-serif, Arial, Helvetica, sans-serif;\n      justify-content: center;\n      align-items: center;\n    }\n\nh2{\n  margin-top: 0;\n  font-size: 35px;\n}\n\n.menu-body \n{\n  max-width: 680px;\n  margin: 15px auto;\n  display: block;\n  color: rbg(92,92,92);\n  padding:10px;\n  background-color: #f6f0e8;\n}    \n\n.menu-section{\n  margin-bottom: 50px;\n  background-color: #f6f0e8;\n}\n\n.menu-section-title\n{\n  font-size:30px;\n  display: block;\n  font-weight: normal;\n  margin: 20px 0;\n  text-align: center;\n}\n\n.menu-item\n{\n  margin: 35px 0;\n  font-size: 18px;\n}\n\n.menu-item-name\n{\n  font-weight: bold;\n  border-bottom: 2px dotted rgb(213,213,213);\n}\n\n.menu-item-description\n{\n  font-style: italic;\n  font-size: .9em;\n  line-height: 1.5em;\n}\n\n.menu-item-price\n{\n  float:right;\n  font-weight: bold;\n  margin-top: -22px;\n}\n\n.contact-container\n{\n  display:flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 10px;\n  overflow-x: hidden;\n  margin:20px 20px;\n}\n\ninput[type=text],input[type=email],textarea\n{\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  margin-top: 6px;\n  margin-bottom: 16px;\n  resize: vertical;\n}\n\ninput[type=submit]\n{\n  background-color: #4CAF50;\n  color:white;\n  padding:12px 20px;\n  border:none;\n  cursor: pointer;\n}\n\ninput[type=submit]:hover{background-color: #45a049;}\n\n.column\n{\n  margin-top: 6px;\n  padding:20px;\n  margin:auto\n}\n\n.row\n{\n  display:flex;\n  flex-direction: row;\n}\n\n@media screen and (max-width:800px){\n  .menu-body{\n    max-width: 600px;\n  }\n}\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n  .column, input[type=submit] {\n    width: 80%;\n    margin-top: 0;\n  }\n  .row{flex-direction: column;}\n\n  .hero-text {\n    font-size: 30px;\n  }\n\n  .menu-body{\n    max-width: 300px;\n  }\n}\n",""]),e.exports=n},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var o=(i=r,c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(l," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([o]).join("\n")}var i,c,l;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&o[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),n.push(l))}},n}},function(e,n,t){"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n,t){"use strict";t.r(n),n.default=t.p+"02bd22ddd9c6cb3999814b840d59eadd.ttf"},function(e,n,t){"use strict";t.r(n),n.default=t.p+"0b3374e329767985bb32fb807264ddda.jpg"},function(e,n,t){"use strict";t.r(n),n.default=t.p+"b597ca0c020832dd79c17416ee85f9f7.jpg"}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,